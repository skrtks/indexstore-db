// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Symbol.proto

package com.jetbrains.swift.indexStoreDB;

/**
 * Protobuf type {@code ProtoIndexStoreDB.SymbolInfo}
 */
public final class SymbolInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ProtoIndexStoreDB.SymbolInfo)
    SymbolInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SymbolInfo.newBuilder() to construct.
  private SymbolInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SymbolInfo() {
    kind_ = 0;
    subKind_ = 0;
    language_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SymbolInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.jetbrains.swift.indexStoreDB.IndexStoreDBProto.internal_static_ProtoIndexStoreDB_SymbolInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.jetbrains.swift.indexStoreDB.IndexStoreDBProto.internal_static_ProtoIndexStoreDB_SymbolInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.jetbrains.swift.indexStoreDB.SymbolInfo.class, com.jetbrains.swift.indexStoreDB.SymbolInfo.Builder.class);
  }

  /**
   * Protobuf enum {@code ProtoIndexStoreDB.SymbolInfo.Kind}
   */
  public enum Kind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>MODULE = 1;</code>
     */
    MODULE(1),
    /**
     * <code>NAMESPACE = 2;</code>
     */
    NAMESPACE(2),
    /**
     * <code>NAMESPACE_ALIAS = 3;</code>
     */
    NAMESPACE_ALIAS(3),
    /**
     * <code>MACRO = 4;</code>
     */
    MACRO(4),
    /**
     * <code>ENUM = 5;</code>
     */
    ENUM(5),
    /**
     * <code>STRUCT = 6;</code>
     */
    STRUCT(6),
    /**
     * <code>CLASS = 7;</code>
     */
    CLASS(7),
    /**
     * <code>PROTOCOL = 8;</code>
     */
    PROTOCOL(8),
    /**
     * <code>EXTENSION = 9;</code>
     */
    EXTENSION(9),
    /**
     * <code>UNION = 10;</code>
     */
    UNION(10),
    /**
     * <code>TYPE_ALIAS = 11;</code>
     */
    TYPE_ALIAS(11),
    /**
     * <code>FUNCTION = 12;</code>
     */
    FUNCTION(12),
    /**
     * <code>VARIABLE = 13;</code>
     */
    VARIABLE(13),
    /**
     * <code>PARAMETER = 14;</code>
     */
    PARAMETER(14),
    /**
     * <code>FIELD = 15;</code>
     */
    FIELD(15),
    /**
     * <code>ENUM_CONSTANT = 16;</code>
     */
    ENUM_CONSTANT(16),
    /**
     * <code>INSTANCE_METHOD = 17;</code>
     */
    INSTANCE_METHOD(17),
    /**
     * <code>CLASS_METHOD = 18;</code>
     */
    CLASS_METHOD(18),
    /**
     * <code>STATIC_METHOD = 19;</code>
     */
    STATIC_METHOD(19),
    /**
     * <code>INSTANCE_PROPERTY = 20;</code>
     */
    INSTANCE_PROPERTY(20),
    /**
     * <code>CLASS_PROPERTY = 21;</code>
     */
    CLASS_PROPERTY(21),
    /**
     * <code>STATIC_PROPERTY = 22;</code>
     */
    STATIC_PROPERTY(22),
    /**
     * <code>CONSTRUCTOR = 23;</code>
     */
    CONSTRUCTOR(23),
    /**
     * <code>DESTRUCTOR = 24;</code>
     */
    DESTRUCTOR(24),
    /**
     * <code>CONVERSION_FUNCTION = 25;</code>
     */
    CONVERSION_FUNCTION(25),
    /**
     * <code>CONCEPT = 26;</code>
     */
    CONCEPT(26),
    /**
     * <code>COMMENT_TAG = 27;</code>
     */
    COMMENT_TAG(27),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>MODULE = 1;</code>
     */
    public static final int MODULE_VALUE = 1;
    /**
     * <code>NAMESPACE = 2;</code>
     */
    public static final int NAMESPACE_VALUE = 2;
    /**
     * <code>NAMESPACE_ALIAS = 3;</code>
     */
    public static final int NAMESPACE_ALIAS_VALUE = 3;
    /**
     * <code>MACRO = 4;</code>
     */
    public static final int MACRO_VALUE = 4;
    /**
     * <code>ENUM = 5;</code>
     */
    public static final int ENUM_VALUE = 5;
    /**
     * <code>STRUCT = 6;</code>
     */
    public static final int STRUCT_VALUE = 6;
    /**
     * <code>CLASS = 7;</code>
     */
    public static final int CLASS_VALUE = 7;
    /**
     * <code>PROTOCOL = 8;</code>
     */
    public static final int PROTOCOL_VALUE = 8;
    /**
     * <code>EXTENSION = 9;</code>
     */
    public static final int EXTENSION_VALUE = 9;
    /**
     * <code>UNION = 10;</code>
     */
    public static final int UNION_VALUE = 10;
    /**
     * <code>TYPE_ALIAS = 11;</code>
     */
    public static final int TYPE_ALIAS_VALUE = 11;
    /**
     * <code>FUNCTION = 12;</code>
     */
    public static final int FUNCTION_VALUE = 12;
    /**
     * <code>VARIABLE = 13;</code>
     */
    public static final int VARIABLE_VALUE = 13;
    /**
     * <code>PARAMETER = 14;</code>
     */
    public static final int PARAMETER_VALUE = 14;
    /**
     * <code>FIELD = 15;</code>
     */
    public static final int FIELD_VALUE = 15;
    /**
     * <code>ENUM_CONSTANT = 16;</code>
     */
    public static final int ENUM_CONSTANT_VALUE = 16;
    /**
     * <code>INSTANCE_METHOD = 17;</code>
     */
    public static final int INSTANCE_METHOD_VALUE = 17;
    /**
     * <code>CLASS_METHOD = 18;</code>
     */
    public static final int CLASS_METHOD_VALUE = 18;
    /**
     * <code>STATIC_METHOD = 19;</code>
     */
    public static final int STATIC_METHOD_VALUE = 19;
    /**
     * <code>INSTANCE_PROPERTY = 20;</code>
     */
    public static final int INSTANCE_PROPERTY_VALUE = 20;
    /**
     * <code>CLASS_PROPERTY = 21;</code>
     */
    public static final int CLASS_PROPERTY_VALUE = 21;
    /**
     * <code>STATIC_PROPERTY = 22;</code>
     */
    public static final int STATIC_PROPERTY_VALUE = 22;
    /**
     * <code>CONSTRUCTOR = 23;</code>
     */
    public static final int CONSTRUCTOR_VALUE = 23;
    /**
     * <code>DESTRUCTOR = 24;</code>
     */
    public static final int DESTRUCTOR_VALUE = 24;
    /**
     * <code>CONVERSION_FUNCTION = 25;</code>
     */
    public static final int CONVERSION_FUNCTION_VALUE = 25;
    /**
     * <code>CONCEPT = 26;</code>
     */
    public static final int CONCEPT_VALUE = 26;
    /**
     * <code>COMMENT_TAG = 27;</code>
     */
    public static final int COMMENT_TAG_VALUE = 27;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Kind valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Kind forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return MODULE;
        case 2: return NAMESPACE;
        case 3: return NAMESPACE_ALIAS;
        case 4: return MACRO;
        case 5: return ENUM;
        case 6: return STRUCT;
        case 7: return CLASS;
        case 8: return PROTOCOL;
        case 9: return EXTENSION;
        case 10: return UNION;
        case 11: return TYPE_ALIAS;
        case 12: return FUNCTION;
        case 13: return VARIABLE;
        case 14: return PARAMETER;
        case 15: return FIELD;
        case 16: return ENUM_CONSTANT;
        case 17: return INSTANCE_METHOD;
        case 18: return CLASS_METHOD;
        case 19: return STATIC_METHOD;
        case 20: return INSTANCE_PROPERTY;
        case 21: return CLASS_PROPERTY;
        case 22: return STATIC_PROPERTY;
        case 23: return CONSTRUCTOR;
        case 24: return DESTRUCTOR;
        case 25: return CONVERSION_FUNCTION;
        case 26: return CONCEPT;
        case 27: return COMMENT_TAG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Kind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Kind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
            public Kind findValueByNumber(int number) {
              return Kind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jetbrains.swift.indexStoreDB.SymbolInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final Kind[] VALUES = values();

    public static Kind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Kind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoIndexStoreDB.SymbolInfo.Kind)
  }

  /**
   * Protobuf enum {@code ProtoIndexStoreDB.SymbolInfo.SubKind}
   */
  public enum SubKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>CXX_COPY_CONSTRUCTOR = 1;</code>
     */
    CXX_COPY_CONSTRUCTOR(1),
    /**
     * <code>CXX_MOVE_CONSTRUCTOR = 2;</code>
     */
    CXX_MOVE_CONSTRUCTOR(2),
    /**
     * <code>ACCESSOR_GETTER = 3;</code>
     */
    ACCESSOR_GETTER(3),
    /**
     * <code>ACCESSOR_SETTER = 4;</code>
     */
    ACCESSOR_SETTER(4),
    /**
     * <pre>
     * Swift sub-kinds
     * </pre>
     *
     * <code>SWIFT_ACCESSOR_WILL_SET = 5;</code>
     */
    SWIFT_ACCESSOR_WILL_SET(5),
    /**
     * <code>SWIFT_ACCESSOR_DID_SET = 6;</code>
     */
    SWIFT_ACCESSOR_DID_SET(6),
    /**
     * <code>SWIFT_ACCESSOR_ADDRESSOR = 7;</code>
     */
    SWIFT_ACCESSOR_ADDRESSOR(7),
    /**
     * <code>SWIFT_ACCESSOR_MUTABLE_ADDRESSOR = 8;</code>
     */
    SWIFT_ACCESSOR_MUTABLE_ADDRESSOR(8),
    /**
     * <code>SWIFT_EXTENSION_OF_STRUCT = 9;</code>
     */
    SWIFT_EXTENSION_OF_STRUCT(9),
    /**
     * <code>SWIFT_EXTENSION_OF_CLASS = 10;</code>
     */
    SWIFT_EXTENSION_OF_CLASS(10),
    /**
     * <code>SWIFT_EXTENSION_OF_ENUM = 11;</code>
     */
    SWIFT_EXTENSION_OF_ENUM(11),
    /**
     * <code>SWIFT_EXTENSION_OF_PROTOCOL = 12;</code>
     */
    SWIFT_EXTENSION_OF_PROTOCOL(12),
    /**
     * <code>SWIFT_PREFIX_OPERATOR = 13;</code>
     */
    SWIFT_PREFIX_OPERATOR(13),
    /**
     * <code>SWIFT_POSTFIX_OPERATOR = 14;</code>
     */
    SWIFT_POSTFIX_OPERATOR(14),
    /**
     * <code>SWIFT_INFIX_OPERATOR = 15;</code>
     */
    SWIFT_INFIX_OPERATOR(15),
    /**
     * <code>SWIFT_SUBSCRIPT = 16;</code>
     */
    SWIFT_SUBSCRIPT(16),
    /**
     * <code>SWIFT_ASSOCIATED_TYPE = 17;</code>
     */
    SWIFT_ASSOCIATED_TYPE(17),
    /**
     * <code>SWIFT_GENERIC_TYPE_PARAM = 18;</code>
     */
    SWIFT_GENERIC_TYPE_PARAM(18),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>CXX_COPY_CONSTRUCTOR = 1;</code>
     */
    public static final int CXX_COPY_CONSTRUCTOR_VALUE = 1;
    /**
     * <code>CXX_MOVE_CONSTRUCTOR = 2;</code>
     */
    public static final int CXX_MOVE_CONSTRUCTOR_VALUE = 2;
    /**
     * <code>ACCESSOR_GETTER = 3;</code>
     */
    public static final int ACCESSOR_GETTER_VALUE = 3;
    /**
     * <code>ACCESSOR_SETTER = 4;</code>
     */
    public static final int ACCESSOR_SETTER_VALUE = 4;
    /**
     * <pre>
     * Swift sub-kinds
     * </pre>
     *
     * <code>SWIFT_ACCESSOR_WILL_SET = 5;</code>
     */
    public static final int SWIFT_ACCESSOR_WILL_SET_VALUE = 5;
    /**
     * <code>SWIFT_ACCESSOR_DID_SET = 6;</code>
     */
    public static final int SWIFT_ACCESSOR_DID_SET_VALUE = 6;
    /**
     * <code>SWIFT_ACCESSOR_ADDRESSOR = 7;</code>
     */
    public static final int SWIFT_ACCESSOR_ADDRESSOR_VALUE = 7;
    /**
     * <code>SWIFT_ACCESSOR_MUTABLE_ADDRESSOR = 8;</code>
     */
    public static final int SWIFT_ACCESSOR_MUTABLE_ADDRESSOR_VALUE = 8;
    /**
     * <code>SWIFT_EXTENSION_OF_STRUCT = 9;</code>
     */
    public static final int SWIFT_EXTENSION_OF_STRUCT_VALUE = 9;
    /**
     * <code>SWIFT_EXTENSION_OF_CLASS = 10;</code>
     */
    public static final int SWIFT_EXTENSION_OF_CLASS_VALUE = 10;
    /**
     * <code>SWIFT_EXTENSION_OF_ENUM = 11;</code>
     */
    public static final int SWIFT_EXTENSION_OF_ENUM_VALUE = 11;
    /**
     * <code>SWIFT_EXTENSION_OF_PROTOCOL = 12;</code>
     */
    public static final int SWIFT_EXTENSION_OF_PROTOCOL_VALUE = 12;
    /**
     * <code>SWIFT_PREFIX_OPERATOR = 13;</code>
     */
    public static final int SWIFT_PREFIX_OPERATOR_VALUE = 13;
    /**
     * <code>SWIFT_POSTFIX_OPERATOR = 14;</code>
     */
    public static final int SWIFT_POSTFIX_OPERATOR_VALUE = 14;
    /**
     * <code>SWIFT_INFIX_OPERATOR = 15;</code>
     */
    public static final int SWIFT_INFIX_OPERATOR_VALUE = 15;
    /**
     * <code>SWIFT_SUBSCRIPT = 16;</code>
     */
    public static final int SWIFT_SUBSCRIPT_VALUE = 16;
    /**
     * <code>SWIFT_ASSOCIATED_TYPE = 17;</code>
     */
    public static final int SWIFT_ASSOCIATED_TYPE_VALUE = 17;
    /**
     * <code>SWIFT_GENERIC_TYPE_PARAM = 18;</code>
     */
    public static final int SWIFT_GENERIC_TYPE_PARAM_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubKind valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SubKind forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return CXX_COPY_CONSTRUCTOR;
        case 2: return CXX_MOVE_CONSTRUCTOR;
        case 3: return ACCESSOR_GETTER;
        case 4: return ACCESSOR_SETTER;
        case 5: return SWIFT_ACCESSOR_WILL_SET;
        case 6: return SWIFT_ACCESSOR_DID_SET;
        case 7: return SWIFT_ACCESSOR_ADDRESSOR;
        case 8: return SWIFT_ACCESSOR_MUTABLE_ADDRESSOR;
        case 9: return SWIFT_EXTENSION_OF_STRUCT;
        case 10: return SWIFT_EXTENSION_OF_CLASS;
        case 11: return SWIFT_EXTENSION_OF_ENUM;
        case 12: return SWIFT_EXTENSION_OF_PROTOCOL;
        case 13: return SWIFT_PREFIX_OPERATOR;
        case 14: return SWIFT_POSTFIX_OPERATOR;
        case 15: return SWIFT_INFIX_OPERATOR;
        case 16: return SWIFT_SUBSCRIPT;
        case 17: return SWIFT_ASSOCIATED_TYPE;
        case 18: return SWIFT_GENERIC_TYPE_PARAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubKind>() {
            public SubKind findValueByNumber(int number) {
              return SubKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jetbrains.swift.indexStoreDB.SymbolInfo.getDescriptor().getEnumTypes().get(1);
    }

    private static final SubKind[] VALUES = values();

    public static SubKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoIndexStoreDB.SymbolInfo.SubKind)
  }

  /**
   * Protobuf enum {@code ProtoIndexStoreDB.SymbolInfo.Language}
   */
  public enum Language
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>C = 0;</code>
     */
    C(0),
    /**
     * <code>OBJC = 1;</code>
     */
    OBJC(1),
    /**
     * <code>CXX = 2;</code>
     */
    CXX(2),
    /**
     * <code>SWIFT = 3;</code>
     */
    SWIFT(3),
    ;

    /**
     * <code>C = 0;</code>
     */
    public static final int C_VALUE = 0;
    /**
     * <code>OBJC = 1;</code>
     */
    public static final int OBJC_VALUE = 1;
    /**
     * <code>CXX = 2;</code>
     */
    public static final int CXX_VALUE = 2;
    /**
     * <code>SWIFT = 3;</code>
     */
    public static final int SWIFT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Language valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Language forNumber(int value) {
      switch (value) {
        case 0: return C;
        case 1: return OBJC;
        case 2: return CXX;
        case 3: return SWIFT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Language> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Language>() {
            public Language findValueByNumber(int number) {
              return Language.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jetbrains.swift.indexStoreDB.SymbolInfo.getDescriptor().getEnumTypes().get(2);
    }

    private static final Language[] VALUES = values();

    public static Language valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Language(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoIndexStoreDB.SymbolInfo.Language)
  }

  private int bitField0_;
  public static final int KIND_FIELD_NUMBER = 1;
  private int kind_ = 0;
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
   * @return Whether the kind field is set.
   */
  @java.lang.Override public boolean hasKind() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
   * @return The kind.
   */
  @java.lang.Override public com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind getKind() {
    com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind result = com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind.forNumber(kind_);
    return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind.UNKNOWN : result;
  }

  public static final int SUB_KIND_FIELD_NUMBER = 2;
  private int subKind_ = 0;
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
   * @return Whether the subKind field is set.
   */
  @java.lang.Override public boolean hasSubKind() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
   * @return The subKind.
   */
  @java.lang.Override public com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind getSubKind() {
    com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind result = com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind.forNumber(subKind_);
    return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind.NONE : result;
  }

  public static final int PROPERTIES_FIELD_NUMBER = 3;
  private int properties_ = 0;
  /**
   * <code>optional uint32 properties = 3;</code>
   * @return Whether the properties field is set.
   */
  @java.lang.Override
  public boolean hasProperties() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional uint32 properties = 3;</code>
   * @return The properties.
   */
  @java.lang.Override
  public int getProperties() {
    return properties_;
  }

  public static final int LANGUAGE_FIELD_NUMBER = 4;
  private int language_ = 0;
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
   * @return Whether the language field is set.
   */
  @java.lang.Override public boolean hasLanguage() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
   * @return The language.
   */
  @java.lang.Override public com.jetbrains.swift.indexStoreDB.SymbolInfo.Language getLanguage() {
    com.jetbrains.swift.indexStoreDB.SymbolInfo.Language result = com.jetbrains.swift.indexStoreDB.SymbolInfo.Language.forNumber(language_);
    return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.Language.C : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, kind_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, subKind_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeUInt32(3, properties_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(4, language_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, kind_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, subKind_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, properties_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, language_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.jetbrains.swift.indexStoreDB.SymbolInfo)) {
      return super.equals(obj);
    }
    com.jetbrains.swift.indexStoreDB.SymbolInfo other = (com.jetbrains.swift.indexStoreDB.SymbolInfo) obj;

    if (hasKind() != other.hasKind()) return false;
    if (hasKind()) {
      if (kind_ != other.kind_) return false;
    }
    if (hasSubKind() != other.hasSubKind()) return false;
    if (hasSubKind()) {
      if (subKind_ != other.subKind_) return false;
    }
    if (hasProperties() != other.hasProperties()) return false;
    if (hasProperties()) {
      if (getProperties()
          != other.getProperties()) return false;
    }
    if (hasLanguage() != other.hasLanguage()) return false;
    if (hasLanguage()) {
      if (language_ != other.language_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasKind()) {
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
    }
    if (hasSubKind()) {
      hash = (37 * hash) + SUB_KIND_FIELD_NUMBER;
      hash = (53 * hash) + subKind_;
    }
    if (hasProperties()) {
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getProperties();
    }
    if (hasLanguage()) {
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + language_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jetbrains.swift.indexStoreDB.SymbolInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.jetbrains.swift.indexStoreDB.SymbolInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ProtoIndexStoreDB.SymbolInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ProtoIndexStoreDB.SymbolInfo)
      com.jetbrains.swift.indexStoreDB.SymbolInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jetbrains.swift.indexStoreDB.IndexStoreDBProto.internal_static_ProtoIndexStoreDB_SymbolInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jetbrains.swift.indexStoreDB.IndexStoreDBProto.internal_static_ProtoIndexStoreDB_SymbolInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jetbrains.swift.indexStoreDB.SymbolInfo.class, com.jetbrains.swift.indexStoreDB.SymbolInfo.Builder.class);
    }

    // Construct using com.jetbrains.swift.indexStoreDB.SymbolInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      kind_ = 0;
      subKind_ = 0;
      properties_ = 0;
      language_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.jetbrains.swift.indexStoreDB.IndexStoreDBProto.internal_static_ProtoIndexStoreDB_SymbolInfo_descriptor;
    }

    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo getDefaultInstanceForType() {
      return com.jetbrains.swift.indexStoreDB.SymbolInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo build() {
      com.jetbrains.swift.indexStoreDB.SymbolInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo buildPartial() {
      com.jetbrains.swift.indexStoreDB.SymbolInfo result = new com.jetbrains.swift.indexStoreDB.SymbolInfo(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.jetbrains.swift.indexStoreDB.SymbolInfo result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.kind_ = kind_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.subKind_ = subKind_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.properties_ = properties_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.language_ = language_;
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.jetbrains.swift.indexStoreDB.SymbolInfo) {
        return mergeFrom((com.jetbrains.swift.indexStoreDB.SymbolInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.jetbrains.swift.indexStoreDB.SymbolInfo other) {
      if (other == com.jetbrains.swift.indexStoreDB.SymbolInfo.getDefaultInstance()) return this;
      if (other.hasKind()) {
        setKind(other.getKind());
      }
      if (other.hasSubKind()) {
        setSubKind(other.getSubKind());
      }
      if (other.hasProperties()) {
        setProperties(other.getProperties());
      }
      if (other.hasLanguage()) {
        setLanguage(other.getLanguage());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind tmpValue =
                  com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                kind_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind tmpValue =
                  com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                subKind_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              properties_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              int tmpRaw = input.readEnum();
              com.jetbrains.swift.indexStoreDB.SymbolInfo.Language tmpValue =
                  com.jetbrains.swift.indexStoreDB.SymbolInfo.Language.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(4, tmpRaw);
              } else {
                language_ = tmpRaw;
                bitField0_ |= 0x00000008;
              }
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int kind_ = 0;
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
     * @return Whether the kind field is set.
     */
    @java.lang.Override public boolean hasKind() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
     * @return The kind.
     */
    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind getKind() {
      com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind result = com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind.forNumber(kind_);
      return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind.UNKNOWN : result;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(com.jetbrains.swift.indexStoreDB.SymbolInfo.Kind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Kind kind = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      bitField0_ = (bitField0_ & ~0x00000001);
      kind_ = 0;
      onChanged();
      return this;
    }

    private int subKind_ = 0;
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
     * @return Whether the subKind field is set.
     */
    @java.lang.Override public boolean hasSubKind() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
     * @return The subKind.
     */
    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind getSubKind() {
      com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind result = com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind.forNumber(subKind_);
      return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind.NONE : result;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
     * @param value The subKind to set.
     * @return This builder for chaining.
     */
    public Builder setSubKind(com.jetbrains.swift.indexStoreDB.SymbolInfo.SubKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      subKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.SubKind sub_kind = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubKind() {
      bitField0_ = (bitField0_ & ~0x00000002);
      subKind_ = 0;
      onChanged();
      return this;
    }

    private int properties_ ;
    /**
     * <code>optional uint32 properties = 3;</code>
     * @return Whether the properties field is set.
     */
    @java.lang.Override
    public boolean hasProperties() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 properties = 3;</code>
     * @return The properties.
     */
    @java.lang.Override
    public int getProperties() {
      return properties_;
    }
    /**
     * <code>optional uint32 properties = 3;</code>
     * @param value The properties to set.
     * @return This builder for chaining.
     */
    public Builder setProperties(int value) {
      
      properties_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 properties = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearProperties() {
      bitField0_ = (bitField0_ & ~0x00000004);
      properties_ = 0;
      onChanged();
      return this;
    }

    private int language_ = 0;
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
     * @return Whether the language field is set.
     */
    @java.lang.Override public boolean hasLanguage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
     * @return The language.
     */
    @java.lang.Override
    public com.jetbrains.swift.indexStoreDB.SymbolInfo.Language getLanguage() {
      com.jetbrains.swift.indexStoreDB.SymbolInfo.Language result = com.jetbrains.swift.indexStoreDB.SymbolInfo.Language.forNumber(language_);
      return result == null ? com.jetbrains.swift.indexStoreDB.SymbolInfo.Language.C : result;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
     * @param value The language to set.
     * @return This builder for chaining.
     */
    public Builder setLanguage(com.jetbrains.swift.indexStoreDB.SymbolInfo.Language value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      language_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .ProtoIndexStoreDB.SymbolInfo.Language language = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLanguage() {
      bitField0_ = (bitField0_ & ~0x00000008);
      language_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ProtoIndexStoreDB.SymbolInfo)
  }

  // @@protoc_insertion_point(class_scope:ProtoIndexStoreDB.SymbolInfo)
  private static final com.jetbrains.swift.indexStoreDB.SymbolInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.jetbrains.swift.indexStoreDB.SymbolInfo();
  }

  public static com.jetbrains.swift.indexStoreDB.SymbolInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<SymbolInfo>
      PARSER = new com.google.protobuf.AbstractParser<SymbolInfo>() {
    @java.lang.Override
    public SymbolInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SymbolInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SymbolInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.jetbrains.swift.indexStoreDB.SymbolInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

